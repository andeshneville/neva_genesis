
Receiver code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800100  000005f4  00000688  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005f4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000021  00800128  00800128  000006b0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006b0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000006e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  0000071c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000018d6  00000000  00000000  00000824  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008b4  00000000  00000000  000020fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b5c  00000000  00000000  000029ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002fc  00000000  00000000  0000350c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005d5  00000000  00000000  00003808  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000dce  00000000  00000000  00003ddd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  00004bab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d4 e0       	ldi	r29, 0x04	; 4
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 ef       	ldi	r30, 0xF4	; 244
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 32       	cpi	r26, 0x28	; 40
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e2       	ldi	r26, 0x28	; 40
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a9 34       	cpi	r26, 0x49	; 73
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 c3 02 	call	0x586	; 0x586 <main>
  9e:	0c 94 f8 02 	jmp	0x5f0	; 0x5f0 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <spi_master_init>:
	}
	else if(row==1 && pos <16){
		LCD_Cmd((pos & 0x0F)| 0xC0);
	}
			LCD_String(str);
}
  a6:	84 b1       	in	r24, 0x04	; 4
  a8:	8f 7e       	andi	r24, 0xEF	; 239
  aa:	84 b9       	out	0x04, r24	; 4
  ac:	84 b1       	in	r24, 0x04	; 4
  ae:	88 62       	ori	r24, 0x28	; 40
  b0:	84 b9       	out	0x04, r24	; 4
  b2:	80 e5       	ldi	r24, 0x50	; 80
  b4:	8c bd       	out	0x2c, r24	; 44
  b6:	8d b5       	in	r24, 0x2d	; 45
  b8:	81 60       	ori	r24, 0x01	; 1
  ba:	8d bd       	out	0x2d, r24	; 45
  bc:	08 95       	ret

000000be <spi_exchange>:
  be:	8e bd       	out	0x2e, r24	; 46
  c0:	0d b4       	in	r0, 0x2d	; 45
  c2:	07 fe       	sbrs	r0, 7
  c4:	fd cf       	rjmp	.-6      	; 0xc0 <spi_exchange+0x2>
  c6:	8e b5       	in	r24, 0x2e	; 46
  c8:	08 95       	ret

000000ca <nrf24_send_spi>:
  ca:	bf 92       	push	r11
  cc:	cf 92       	push	r12
  ce:	df 92       	push	r13
  d0:	ef 92       	push	r14
  d2:	ff 92       	push	r15
  d4:	0f 93       	push	r16
  d6:	1f 93       	push	r17
  d8:	cf 93       	push	r28
  da:	df 93       	push	r29
  dc:	6b 01       	movw	r12, r22
  de:	7a 01       	movw	r14, r20
  e0:	9b b1       	in	r25, 0x0b	; 11
  e2:	9e 7f       	andi	r25, 0xFE	; 254
  e4:	9b b9       	out	0x0b, r25	; 11
  e6:	0e 94 5f 00 	call	0xbe	; 0xbe <spi_exchange>
  ea:	b8 2e       	mov	r11, r24
  ec:	c0 e0       	ldi	r28, 0x00	; 0
  ee:	d0 e0       	ldi	r29, 0x00	; 0
  f0:	0a c0       	rjmp	.+20     	; 0x106 <nrf24_send_spi+0x3c>
  f2:	86 01       	movw	r16, r12
  f4:	0c 0f       	add	r16, r28
  f6:	1d 1f       	adc	r17, r29
  f8:	f8 01       	movw	r30, r16
  fa:	80 81       	ld	r24, Z
  fc:	0e 94 5f 00 	call	0xbe	; 0xbe <spi_exchange>
 100:	f8 01       	movw	r30, r16
 102:	80 83       	st	Z, r24
 104:	21 96       	adiw	r28, 0x01	; 1
 106:	ce 15       	cp	r28, r14
 108:	df 05       	cpc	r29, r15
 10a:	98 f3       	brcs	.-26     	; 0xf2 <nrf24_send_spi+0x28>
 10c:	8b b1       	in	r24, 0x0b	; 11
 10e:	81 60       	ori	r24, 0x01	; 1
 110:	8b b9       	out	0x0b, r24	; 11
 112:	8b 2d       	mov	r24, r11
 114:	df 91       	pop	r29
 116:	cf 91       	pop	r28
 118:	1f 91       	pop	r17
 11a:	0f 91       	pop	r16
 11c:	ff 90       	pop	r15
 11e:	ef 90       	pop	r14
 120:	df 90       	pop	r13
 122:	cf 90       	pop	r12
 124:	bf 90       	pop	r11
 126:	08 95       	ret

00000128 <nrf24_write>:
 128:	80 62       	ori	r24, 0x20	; 32
 12a:	0e 94 65 00 	call	0xca	; 0xca <nrf24_send_spi>
 12e:	08 95       	ret

00000130 <nrf24_read>:
 130:	0e 94 65 00 	call	0xca	; 0xca <nrf24_send_spi>
 134:	08 95       	ret

00000136 <nrf24_init>:
 136:	0f 93       	push	r16
 138:	1f 93       	push	r17
 13a:	cf 93       	push	r28
 13c:	df 93       	push	r29
 13e:	1f 92       	push	r1
 140:	cd b7       	in	r28, 0x3d	; 61
 142:	de b7       	in	r29, 0x3e	; 62
 144:	f8 94       	cli
 146:	e9 e6       	ldi	r30, 0x69	; 105
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	80 81       	ld	r24, Z
 14c:	82 60       	ori	r24, 0x02	; 2
 14e:	80 83       	st	Z, r24
 150:	8d b3       	in	r24, 0x1d	; 29
 152:	81 60       	ori	r24, 0x01	; 1
 154:	8d bb       	out	0x1d, r24	; 29
 156:	78 94       	sei
 158:	84 b1       	in	r24, 0x04	; 4
 15a:	82 60       	ori	r24, 0x02	; 2
 15c:	84 b9       	out	0x04, r24	; 4
 15e:	8a b1       	in	r24, 0x0a	; 10
 160:	81 60       	ori	r24, 0x01	; 1
 162:	8a b9       	out	0x0a, r24	; 10
 164:	8b b1       	in	r24, 0x0b	; 11
 166:	81 60       	ori	r24, 0x01	; 1
 168:	8b b9       	out	0x0b, r24	; 11
 16a:	85 b1       	in	r24, 0x05	; 5
 16c:	8d 7f       	andi	r24, 0xFD	; 253
 16e:	85 b9       	out	0x05, r24	; 5
 170:	0e 94 53 00 	call	0xa6	; 0xa6 <spi_master_init>
 174:	2f ef       	ldi	r18, 0xFF	; 255
 176:	80 e7       	ldi	r24, 0x70	; 112
 178:	92 e0       	ldi	r25, 0x02	; 2
 17a:	21 50       	subi	r18, 0x01	; 1
 17c:	80 40       	sbci	r24, 0x00	; 0
 17e:	90 40       	sbci	r25, 0x00	; 0
 180:	e1 f7       	brne	.-8      	; 0x17a <nrf24_init+0x44>
 182:	00 c0       	rjmp	.+0      	; 0x184 <nrf24_init+0x4e>
 184:	00 00       	nop
 186:	0f e3       	ldi	r16, 0x3F	; 63
 188:	00 93 48 01 	sts	0x0148, r16	; 0x800148 <data>
 18c:	41 e0       	ldi	r20, 0x01	; 1
 18e:	50 e0       	ldi	r21, 0x00	; 0
 190:	68 e4       	ldi	r22, 0x48	; 72
 192:	71 e0       	ldi	r23, 0x01	; 1
 194:	80 e0       	ldi	r24, 0x00	; 0
 196:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 19a:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <data>
 19e:	41 e0       	ldi	r20, 0x01	; 1
 1a0:	50 e0       	ldi	r21, 0x00	; 0
 1a2:	68 e4       	ldi	r22, 0x48	; 72
 1a4:	71 e0       	ldi	r23, 0x01	; 1
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 1ac:	80 ef       	ldi	r24, 0xF0	; 240
 1ae:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <data>
 1b2:	41 e0       	ldi	r20, 0x01	; 1
 1b4:	50 e0       	ldi	r21, 0x00	; 0
 1b6:	68 e4       	ldi	r22, 0x48	; 72
 1b8:	71 e0       	ldi	r23, 0x01	; 1
 1ba:	84 e0       	ldi	r24, 0x04	; 4
 1bc:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 1c0:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <data>
 1c4:	41 e0       	ldi	r20, 0x01	; 1
 1c6:	50 e0       	ldi	r21, 0x00	; 0
 1c8:	68 e4       	ldi	r22, 0x48	; 72
 1ca:	71 e0       	ldi	r23, 0x01	; 1
 1cc:	82 e0       	ldi	r24, 0x02	; 2
 1ce:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 1d2:	84 e7       	ldi	r24, 0x74	; 116
 1d4:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <data>
 1d8:	41 e0       	ldi	r20, 0x01	; 1
 1da:	50 e0       	ldi	r21, 0x00	; 0
 1dc:	68 e4       	ldi	r22, 0x48	; 72
 1de:	71 e0       	ldi	r23, 0x01	; 1
 1e0:	85 e0       	ldi	r24, 0x05	; 5
 1e2:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 1e6:	8e e0       	ldi	r24, 0x0E	; 14
 1e8:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <data>
 1ec:	41 e0       	ldi	r20, 0x01	; 1
 1ee:	50 e0       	ldi	r21, 0x00	; 0
 1f0:	68 e4       	ldi	r22, 0x48	; 72
 1f2:	71 e0       	ldi	r23, 0x01	; 1
 1f4:	86 e0       	ldi	r24, 0x06	; 6
 1f6:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 1fa:	10 e7       	ldi	r17, 0x70	; 112
 1fc:	10 93 48 01 	sts	0x0148, r17	; 0x800148 <data>
 200:	41 e0       	ldi	r20, 0x01	; 1
 202:	50 e0       	ldi	r21, 0x00	; 0
 204:	68 e4       	ldi	r22, 0x48	; 72
 206:	71 e0       	ldi	r23, 0x01	; 1
 208:	87 e0       	ldi	r24, 0x07	; 7
 20a:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 20e:	00 93 48 01 	sts	0x0148, r16	; 0x800148 <data>
 212:	41 e0       	ldi	r20, 0x01	; 1
 214:	50 e0       	ldi	r21, 0x00	; 0
 216:	68 e4       	ldi	r22, 0x48	; 72
 218:	71 e0       	ldi	r23, 0x01	; 1
 21a:	8c e1       	ldi	r24, 0x1C	; 28
 21c:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 220:	84 e0       	ldi	r24, 0x04	; 4
 222:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <data>
 226:	41 e0       	ldi	r20, 0x01	; 1
 228:	50 e0       	ldi	r21, 0x00	; 0
 22a:	68 e4       	ldi	r22, 0x48	; 72
 22c:	71 e0       	ldi	r23, 0x01	; 1
 22e:	8d e1       	ldi	r24, 0x1D	; 29
 230:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 234:	19 83       	std	Y+1, r17	; 0x01
 236:	40 e0       	ldi	r20, 0x00	; 0
 238:	50 e0       	ldi	r21, 0x00	; 0
 23a:	60 e0       	ldi	r22, 0x00	; 0
 23c:	70 e0       	ldi	r23, 0x00	; 0
 23e:	82 ee       	ldi	r24, 0xE2	; 226
 240:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 244:	40 e0       	ldi	r20, 0x00	; 0
 246:	50 e0       	ldi	r21, 0x00	; 0
 248:	60 e0       	ldi	r22, 0x00	; 0
 24a:	70 e0       	ldi	r23, 0x00	; 0
 24c:	81 ee       	ldi	r24, 0xE1	; 225
 24e:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 252:	45 e0       	ldi	r20, 0x05	; 5
 254:	50 e0       	ldi	r21, 0x00	; 0
 256:	65 e0       	ldi	r22, 0x05	; 5
 258:	71 e0       	ldi	r23, 0x01	; 1
 25a:	8a e0       	ldi	r24, 0x0A	; 10
 25c:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 260:	45 e0       	ldi	r20, 0x05	; 5
 262:	50 e0       	ldi	r21, 0x00	; 0
 264:	60 e0       	ldi	r22, 0x00	; 0
 266:	71 e0       	ldi	r23, 0x01	; 1
 268:	80 e1       	ldi	r24, 0x10	; 16
 26a:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 26e:	41 e0       	ldi	r20, 0x01	; 1
 270:	50 e0       	ldi	r21, 0x00	; 0
 272:	be 01       	movw	r22, r28
 274:	6f 5f       	subi	r22, 0xFF	; 255
 276:	7f 4f       	sbci	r23, 0xFF	; 255
 278:	82 e0       	ldi	r24, 0x02	; 2
 27a:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 27e:	89 81       	ldd	r24, Y+1	; 0x01
 280:	81 60       	ori	r24, 0x01	; 1
 282:	89 83       	std	Y+1, r24	; 0x01
 284:	41 e0       	ldi	r20, 0x01	; 1
 286:	50 e0       	ldi	r21, 0x00	; 0
 288:	be 01       	movw	r22, r28
 28a:	6f 5f       	subi	r22, 0xFF	; 255
 28c:	7f 4f       	sbci	r23, 0xFF	; 255
 28e:	82 e0       	ldi	r24, 0x02	; 2
 290:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 294:	0f 90       	pop	r0
 296:	df 91       	pop	r29
 298:	cf 91       	pop	r28
 29a:	1f 91       	pop	r17
 29c:	0f 91       	pop	r16
 29e:	08 95       	ret

000002a0 <nrf24_state>:
 2a0:	1f 93       	push	r17
 2a2:	cf 93       	push	r28
 2a4:	df 93       	push	r29
 2a6:	1f 92       	push	r1
 2a8:	cd b7       	in	r28, 0x3d	; 61
 2aa:	de b7       	in	r29, 0x3e	; 62
 2ac:	18 2f       	mov	r17, r24
 2ae:	41 e0       	ldi	r20, 0x01	; 1
 2b0:	50 e0       	ldi	r21, 0x00	; 0
 2b2:	be 01       	movw	r22, r28
 2b4:	6f 5f       	subi	r22, 0xFF	; 255
 2b6:	7f 4f       	sbci	r23, 0xFF	; 255
 2b8:	80 e0       	ldi	r24, 0x00	; 0
 2ba:	0e 94 98 00 	call	0x130	; 0x130 <nrf24_read>
 2be:	13 30       	cpi	r17, 0x03	; 3
 2c0:	71 f1       	breq	.+92     	; 0x31e <nrf24_state+0x7e>
 2c2:	28 f4       	brcc	.+10     	; 0x2ce <nrf24_state+0x2e>
 2c4:	11 30       	cpi	r17, 0x01	; 1
 2c6:	59 f0       	breq	.+22     	; 0x2de <nrf24_state+0x3e>
 2c8:	12 30       	cpi	r17, 0x02	; 2
 2ca:	e9 f0       	breq	.+58     	; 0x306 <nrf24_state+0x66>
 2cc:	62 c0       	rjmp	.+196    	; 0x392 <nrf24_state+0xf2>
 2ce:	15 30       	cpi	r17, 0x05	; 5
 2d0:	09 f4       	brne	.+2      	; 0x2d4 <nrf24_state+0x34>
 2d2:	47 c0       	rjmp	.+142    	; 0x362 <nrf24_state+0xc2>
 2d4:	d0 f1       	brcs	.+116    	; 0x34a <nrf24_state+0xaa>
 2d6:	16 30       	cpi	r17, 0x06	; 6
 2d8:	09 f4       	brne	.+2      	; 0x2dc <nrf24_state+0x3c>
 2da:	47 c0       	rjmp	.+142    	; 0x36a <nrf24_state+0xca>
 2dc:	5a c0       	rjmp	.+180    	; 0x392 <nrf24_state+0xf2>
 2de:	89 81       	ldd	r24, Y+1	; 0x01
 2e0:	81 fd       	sbrc	r24, 1
 2e2:	57 c0       	rjmp	.+174    	; 0x392 <nrf24_state+0xf2>
 2e4:	82 60       	ori	r24, 0x02	; 2
 2e6:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <data>
 2ea:	41 e0       	ldi	r20, 0x01	; 1
 2ec:	50 e0       	ldi	r21, 0x00	; 0
 2ee:	68 e4       	ldi	r22, 0x48	; 72
 2f0:	71 e0       	ldi	r23, 0x01	; 1
 2f2:	80 e0       	ldi	r24, 0x00	; 0
 2f4:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 2f8:	8f e9       	ldi	r24, 0x9F	; 159
 2fa:	9f e0       	ldi	r25, 0x0F	; 15
 2fc:	01 97       	sbiw	r24, 0x01	; 1
 2fe:	f1 f7       	brne	.-4      	; 0x2fc <nrf24_state+0x5c>
 300:	00 c0       	rjmp	.+0      	; 0x302 <nrf24_state+0x62>
 302:	00 00       	nop
 304:	46 c0       	rjmp	.+140    	; 0x392 <nrf24_state+0xf2>
 306:	89 81       	ldd	r24, Y+1	; 0x01
 308:	8d 7f       	andi	r24, 0xFD	; 253
 30a:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <data>
 30e:	41 e0       	ldi	r20, 0x01	; 1
 310:	50 e0       	ldi	r21, 0x00	; 0
 312:	68 e4       	ldi	r22, 0x48	; 72
 314:	71 e0       	ldi	r23, 0x01	; 1
 316:	80 e0       	ldi	r24, 0x00	; 0
 318:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 31c:	3a c0       	rjmp	.+116    	; 0x392 <nrf24_state+0xf2>
 31e:	89 81       	ldd	r24, Y+1	; 0x01
 320:	81 60       	ori	r24, 0x01	; 1
 322:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <data>
 326:	41 e0       	ldi	r20, 0x01	; 1
 328:	50 e0       	ldi	r21, 0x00	; 0
 32a:	68 e4       	ldi	r22, 0x48	; 72
 32c:	71 e0       	ldi	r23, 0x01	; 1
 32e:	80 e0       	ldi	r24, 0x00	; 0
 330:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 334:	80 e7       	ldi	r24, 0x70	; 112
 336:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <data>
 33a:	41 e0       	ldi	r20, 0x01	; 1
 33c:	50 e0       	ldi	r21, 0x00	; 0
 33e:	68 e4       	ldi	r22, 0x48	; 72
 340:	71 e0       	ldi	r23, 0x01	; 1
 342:	87 e0       	ldi	r24, 0x07	; 7
 344:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 348:	24 c0       	rjmp	.+72     	; 0x392 <nrf24_state+0xf2>
 34a:	89 81       	ldd	r24, Y+1	; 0x01
 34c:	8e 7f       	andi	r24, 0xFE	; 254
 34e:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <data>
 352:	41 e0       	ldi	r20, 0x01	; 1
 354:	50 e0       	ldi	r21, 0x00	; 0
 356:	68 e4       	ldi	r22, 0x48	; 72
 358:	71 e0       	ldi	r23, 0x01	; 1
 35a:	80 e0       	ldi	r24, 0x00	; 0
 35c:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 360:	18 c0       	rjmp	.+48     	; 0x392 <nrf24_state+0xf2>
 362:	85 b1       	in	r24, 0x05	; 5
 364:	8d 7f       	andi	r24, 0xFD	; 253
 366:	85 b9       	out	0x05, r24	; 5
 368:	14 c0       	rjmp	.+40     	; 0x392 <nrf24_state+0xf2>
 36a:	89 81       	ldd	r24, Y+1	; 0x01
 36c:	8e 7f       	andi	r24, 0xFE	; 254
 36e:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <data>
 372:	41 e0       	ldi	r20, 0x01	; 1
 374:	50 e0       	ldi	r21, 0x00	; 0
 376:	68 e4       	ldi	r22, 0x48	; 72
 378:	71 e0       	ldi	r23, 0x01	; 1
 37a:	80 e0       	ldi	r24, 0x00	; 0
 37c:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 380:	85 b1       	in	r24, 0x05	; 5
 382:	82 60       	ori	r24, 0x02	; 2
 384:	85 b9       	out	0x05, r24	; 5
 386:	8b e2       	ldi	r24, 0x2B	; 43
 388:	91 e0       	ldi	r25, 0x01	; 1
 38a:	01 97       	sbiw	r24, 0x01	; 1
 38c:	f1 f7       	brne	.-4      	; 0x38a <nrf24_state+0xea>
 38e:	00 c0       	rjmp	.+0      	; 0x390 <nrf24_state+0xf0>
 390:	00 00       	nop
 392:	0f 90       	pop	r0
 394:	df 91       	pop	r29
 396:	cf 91       	pop	r28
 398:	1f 91       	pop	r17
 39a:	08 95       	ret

0000039c <nrf24_start_listening>:
 39c:	83 e0       	ldi	r24, 0x03	; 3
 39e:	0e 94 50 01 	call	0x2a0	; 0x2a0 <nrf24_state>
 3a2:	85 b1       	in	r24, 0x05	; 5
 3a4:	82 60       	ori	r24, 0x02	; 2
 3a6:	85 b9       	out	0x05, r24	; 5
 3a8:	8b e2       	ldi	r24, 0x2B	; 43
 3aa:	91 e0       	ldi	r25, 0x01	; 1
 3ac:	01 97       	sbiw	r24, 0x01	; 1
 3ae:	f1 f7       	brne	.-4      	; 0x3ac <nrf24_start_listening+0x10>
 3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <nrf24_start_listening+0x16>
 3b2:	00 00       	nop
 3b4:	08 95       	ret

000003b6 <nrf24_available>:
 3b6:	cf 93       	push	r28
 3b8:	df 93       	push	r29
 3ba:	1f 92       	push	r1
 3bc:	cd b7       	in	r28, 0x3d	; 61
 3be:	de b7       	in	r29, 0x3e	; 62
 3c0:	41 e0       	ldi	r20, 0x01	; 1
 3c2:	50 e0       	ldi	r21, 0x00	; 0
 3c4:	be 01       	movw	r22, r28
 3c6:	6f 5f       	subi	r22, 0xFF	; 255
 3c8:	7f 4f       	sbci	r23, 0xFF	; 255
 3ca:	87 e1       	ldi	r24, 0x17	; 23
 3cc:	0e 94 98 00 	call	0x130	; 0x130 <nrf24_read>
 3d0:	89 81       	ldd	r24, Y+1	; 0x01
 3d2:	80 fd       	sbrc	r24, 0
 3d4:	03 c0       	rjmp	.+6      	; 0x3dc <nrf24_available+0x26>
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	02 c0       	rjmp	.+4      	; 0x3e0 <nrf24_available+0x2a>
 3dc:	80 e0       	ldi	r24, 0x00	; 0
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	0f 90       	pop	r0
 3e2:	df 91       	pop	r29
 3e4:	cf 91       	pop	r28
 3e6:	08 95       	ret

000003e8 <nrf24_read_message>:
 3e8:	80 e2       	ldi	r24, 0x20	; 32
 3ea:	e8 e2       	ldi	r30, 0x28	; 40
 3ec:	f1 e0       	ldi	r31, 0x01	; 1
 3ee:	df 01       	movw	r26, r30
 3f0:	1d 92       	st	X+, r1
 3f2:	8a 95       	dec	r24
 3f4:	e9 f7       	brne	.-6      	; 0x3f0 <nrf24_read_message+0x8>
 3f6:	41 e0       	ldi	r20, 0x01	; 1
 3f8:	50 e0       	ldi	r21, 0x00	; 0
 3fa:	68 e4       	ldi	r22, 0x48	; 72
 3fc:	71 e0       	ldi	r23, 0x01	; 1
 3fe:	80 e6       	ldi	r24, 0x60	; 96
 400:	0e 94 98 00 	call	0x130	; 0x130 <nrf24_read>
 404:	40 91 48 01 	lds	r20, 0x0148	; 0x800148 <data>
 408:	44 23       	and	r20, r20
 40a:	41 f0       	breq	.+16     	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
 40c:	50 e0       	ldi	r21, 0x00	; 0
 40e:	4f 5f       	subi	r20, 0xFF	; 255
 410:	5f 4f       	sbci	r21, 0xFF	; 255
 412:	68 e2       	ldi	r22, 0x28	; 40
 414:	71 e0       	ldi	r23, 0x01	; 1
 416:	81 e6       	ldi	r24, 0x61	; 97
 418:	0e 94 65 00 	call	0xca	; 0xca <nrf24_send_spi>
 41c:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
 420:	88 23       	and	r24, r24
 422:	69 f0       	breq	.+26     	; 0x43e <__DATA_REGION_LENGTH__+0x3e>
 424:	80 e4       	ldi	r24, 0x40	; 64
 426:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <data>
 42a:	41 e0       	ldi	r20, 0x01	; 1
 42c:	50 e0       	ldi	r21, 0x00	; 0
 42e:	68 e4       	ldi	r22, 0x48	; 72
 430:	71 e0       	ldi	r23, 0x01	; 1
 432:	87 e0       	ldi	r24, 0x07	; 7
 434:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 438:	88 e2       	ldi	r24, 0x28	; 40
 43a:	91 e0       	ldi	r25, 0x01	; 1
 43c:	08 95       	ret
 43e:	80 e4       	ldi	r24, 0x40	; 64
 440:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <data>
 444:	41 e0       	ldi	r20, 0x01	; 1
 446:	50 e0       	ldi	r21, 0x00	; 0
 448:	68 e4       	ldi	r22, 0x48	; 72
 44a:	71 e0       	ldi	r23, 0x01	; 1
 44c:	87 e0       	ldi	r24, 0x07	; 7
 44e:	0e 94 94 00 	call	0x128	; 0x128 <nrf24_write>
 452:	8e e1       	ldi	r24, 0x1E	; 30
 454:	91 e0       	ldi	r25, 0x01	; 1
 456:	08 95       	ret

00000458 <LCD_Cmd>:
 458:	9b b1       	in	r25, 0x0b	; 11
 45a:	9f 70       	andi	r25, 0x0F	; 15
 45c:	28 2f       	mov	r18, r24
 45e:	20 7f       	andi	r18, 0xF0	; 240
 460:	92 2b       	or	r25, r18
 462:	9b b9       	out	0x0b, r25	; 11
 464:	9b b1       	in	r25, 0x0b	; 11
 466:	9e 7f       	andi	r25, 0xFE	; 254
 468:	9b b9       	out	0x0b, r25	; 11
 46a:	9b b1       	in	r25, 0x0b	; 11
 46c:	92 60       	ori	r25, 0x02	; 2
 46e:	9b b9       	out	0x0b, r25	; 11
 470:	ef ec       	ldi	r30, 0xCF	; 207
 472:	f7 e0       	ldi	r31, 0x07	; 7
 474:	31 97       	sbiw	r30, 0x01	; 1
 476:	f1 f7       	brne	.-4      	; 0x474 <LCD_Cmd+0x1c>
 478:	00 c0       	rjmp	.+0      	; 0x47a <LCD_Cmd+0x22>
 47a:	00 00       	nop
 47c:	9b b1       	in	r25, 0x0b	; 11
 47e:	9d 7f       	andi	r25, 0xFD	; 253
 480:	9b b9       	out	0x0b, r25	; 11
 482:	2b b1       	in	r18, 0x0b	; 11
 484:	f0 e1       	ldi	r31, 0x10	; 16
 486:	8f 9f       	mul	r24, r31
 488:	c0 01       	movw	r24, r0
 48a:	11 24       	eor	r1, r1
 48c:	92 2f       	mov	r25, r18
 48e:	9f 70       	andi	r25, 0x0F	; 15
 490:	89 2b       	or	r24, r25
 492:	8b b9       	out	0x0b, r24	; 11
 494:	8b b1       	in	r24, 0x0b	; 11
 496:	82 60       	ori	r24, 0x02	; 2
 498:	8b b9       	out	0x0b, r24	; 11
 49a:	8f ec       	ldi	r24, 0xCF	; 207
 49c:	97 e0       	ldi	r25, 0x07	; 7
 49e:	01 97       	sbiw	r24, 0x01	; 1
 4a0:	f1 f7       	brne	.-4      	; 0x49e <LCD_Cmd+0x46>
 4a2:	00 c0       	rjmp	.+0      	; 0x4a4 <LCD_Cmd+0x4c>
 4a4:	00 00       	nop
 4a6:	8b b1       	in	r24, 0x0b	; 11
 4a8:	8d 7f       	andi	r24, 0xFD	; 253
 4aa:	8b b9       	out	0x0b, r24	; 11
 4ac:	ef ec       	ldi	r30, 0xCF	; 207
 4ae:	f7 e0       	ldi	r31, 0x07	; 7
 4b0:	31 97       	sbiw	r30, 0x01	; 1
 4b2:	f1 f7       	brne	.-4      	; 0x4b0 <LCD_Cmd+0x58>
 4b4:	00 c0       	rjmp	.+0      	; 0x4b6 <LCD_Cmd+0x5e>
 4b6:	00 00       	nop
 4b8:	08 95       	ret

000004ba <LCD_Char>:
 4ba:	9b b1       	in	r25, 0x0b	; 11
 4bc:	9f 70       	andi	r25, 0x0F	; 15
 4be:	28 2f       	mov	r18, r24
 4c0:	20 7f       	andi	r18, 0xF0	; 240
 4c2:	92 2b       	or	r25, r18
 4c4:	9b b9       	out	0x0b, r25	; 11
 4c6:	9b b1       	in	r25, 0x0b	; 11
 4c8:	91 60       	ori	r25, 0x01	; 1
 4ca:	9b b9       	out	0x0b, r25	; 11
 4cc:	9b b1       	in	r25, 0x0b	; 11
 4ce:	92 60       	ori	r25, 0x02	; 2
 4d0:	9b b9       	out	0x0b, r25	; 11
 4d2:	ef ec       	ldi	r30, 0xCF	; 207
 4d4:	f7 e0       	ldi	r31, 0x07	; 7
 4d6:	31 97       	sbiw	r30, 0x01	; 1
 4d8:	f1 f7       	brne	.-4      	; 0x4d6 <LCD_Char+0x1c>
 4da:	00 c0       	rjmp	.+0      	; 0x4dc <LCD_Char+0x22>
 4dc:	00 00       	nop
 4de:	9b b1       	in	r25, 0x0b	; 11
 4e0:	9d 7f       	andi	r25, 0xFD	; 253
 4e2:	9b b9       	out	0x0b, r25	; 11
 4e4:	2b b1       	in	r18, 0x0b	; 11
 4e6:	f0 e1       	ldi	r31, 0x10	; 16
 4e8:	8f 9f       	mul	r24, r31
 4ea:	c0 01       	movw	r24, r0
 4ec:	11 24       	eor	r1, r1
 4ee:	92 2f       	mov	r25, r18
 4f0:	9f 70       	andi	r25, 0x0F	; 15
 4f2:	89 2b       	or	r24, r25
 4f4:	8b b9       	out	0x0b, r24	; 11
 4f6:	8b b1       	in	r24, 0x0b	; 11
 4f8:	82 60       	ori	r24, 0x02	; 2
 4fa:	8b b9       	out	0x0b, r24	; 11
 4fc:	8f ec       	ldi	r24, 0xCF	; 207
 4fe:	97 e0       	ldi	r25, 0x07	; 7
 500:	01 97       	sbiw	r24, 0x01	; 1
 502:	f1 f7       	brne	.-4      	; 0x500 <__stack+0x1>
 504:	00 c0       	rjmp	.+0      	; 0x506 <__stack+0x7>
 506:	00 00       	nop
 508:	8b b1       	in	r24, 0x0b	; 11
 50a:	8d 7f       	andi	r24, 0xFD	; 253
 50c:	8b b9       	out	0x0b, r24	; 11
 50e:	ef ec       	ldi	r30, 0xCF	; 207
 510:	f7 e0       	ldi	r31, 0x07	; 7
 512:	31 97       	sbiw	r30, 0x01	; 1
 514:	f1 f7       	brne	.-4      	; 0x512 <__stack+0x13>
 516:	00 c0       	rjmp	.+0      	; 0x518 <__stack+0x19>
 518:	00 00       	nop
 51a:	08 95       	ret

0000051c <LCD_Init>:
 51c:	8f ef       	ldi	r24, 0xFF	; 255
 51e:	8a b9       	out	0x0a, r24	; 10
 520:	8f e9       	ldi	r24, 0x9F	; 159
 522:	9f e0       	ldi	r25, 0x0F	; 15
 524:	01 97       	sbiw	r24, 0x01	; 1
 526:	f1 f7       	brne	.-4      	; 0x524 <LCD_Init+0x8>
 528:	00 c0       	rjmp	.+0      	; 0x52a <LCD_Init+0xe>
 52a:	00 00       	nop
 52c:	82 e0       	ldi	r24, 0x02	; 2
 52e:	0e 94 2c 02 	call	0x458	; 0x458 <LCD_Cmd>
 532:	88 e2       	ldi	r24, 0x28	; 40
 534:	0e 94 2c 02 	call	0x458	; 0x458 <LCD_Cmd>
 538:	8c e0       	ldi	r24, 0x0C	; 12
 53a:	0e 94 2c 02 	call	0x458	; 0x458 <LCD_Cmd>
 53e:	86 e0       	ldi	r24, 0x06	; 6
 540:	0e 94 2c 02 	call	0x458	; 0x458 <LCD_Cmd>
 544:	81 e0       	ldi	r24, 0x01	; 1
 546:	0e 94 2c 02 	call	0x458	; 0x458 <LCD_Cmd>
 54a:	08 95       	ret

0000054c <LCD_String>:
 54c:	0f 93       	push	r16
 54e:	1f 93       	push	r17
 550:	cf 93       	push	r28
 552:	df 93       	push	r29
 554:	8c 01       	movw	r16, r24
 556:	c0 e0       	ldi	r28, 0x00	; 0
 558:	d0 e0       	ldi	r29, 0x00	; 0
 55a:	03 c0       	rjmp	.+6      	; 0x562 <LCD_String+0x16>
 55c:	0e 94 5d 02 	call	0x4ba	; 0x4ba <LCD_Char>
 560:	21 96       	adiw	r28, 0x01	; 1
 562:	f8 01       	movw	r30, r16
 564:	ec 0f       	add	r30, r28
 566:	fd 1f       	adc	r31, r29
 568:	80 81       	ld	r24, Z
 56a:	81 11       	cpse	r24, r1
 56c:	f7 cf       	rjmp	.-18     	; 0x55c <LCD_String+0x10>
 56e:	df 91       	pop	r29
 570:	cf 91       	pop	r28
 572:	1f 91       	pop	r17
 574:	0f 91       	pop	r16
 576:	08 95       	ret

00000578 <LCD_Clear>:
void LCD_Clear(void){
	LCD_Cmd(0x01); /* clear display */
 578:	81 e0       	ldi	r24, 0x01	; 1
 57a:	0e 94 2c 02 	call	0x458	; 0x458 <LCD_Cmd>
	LCD_Cmd(0x02); /* Return display to its home position */
 57e:	82 e0       	ldi	r24, 0x02	; 2
 580:	0e 94 2c 02 	call	0x458	; 0x458 <LCD_Cmd>
 584:	08 95       	ret

00000586 <main>:
void servo_init(void);
int gripper(int position);
int arm_joint(int position);

int main(void)
{
 586:	cf 93       	push	r28
 588:	df 93       	push	r29
 58a:	cd b7       	in	r28, 0x3d	; 61
 58c:	de b7       	in	r29, 0x3e	; 62
 58e:	a0 97       	sbiw	r28, 0x20	; 32
 590:	0f b6       	in	r0, 0x3f	; 63
 592:	f8 94       	cli
 594:	de bf       	out	0x3e, r29	; 62
 596:	0f be       	out	0x3f, r0	; 63
 598:	cd bf       	out	0x3d, r28	; 61
	DDRD = 0xFF;		// Make PORTD as output Port 
 59a:	8f ef       	ldi	r24, 0xFF	; 255
 59c:	8a b9       	out	0x0a, r24	; 10
	DDRC = 0xFF;		// Make PORTD as output Port 
 59e:	87 b9       	out	0x07, r24	; 7
	DDRB = 0x00;        /* Make PORTB as input */
 5a0:	14 b8       	out	0x04, r1	; 4
	LCD_Init();
 5a2:	0e 94 8e 02 	call	0x51c	; 0x51c <LCD_Init>
	LCD_Clear();
 5a6:	0e 94 bc 02 	call	0x578	; 0x578 <LCD_Clear>
	//initPWM();
	//dc_init();
	//servo_init();
	nrf24_init();
 5aa:	0e 94 9b 00 	call	0x136	; 0x136 <nrf24_init>
    /* Replace with your application code */
    while (1) 
    {
		nrf24_start_listening();
 5ae:	0e 94 ce 01 	call	0x39c	; 0x39c <nrf24_start_listening>
		char rf_message[32];
		LCD_String("P");
 5b2:	85 e2       	ldi	r24, 0x25	; 37
 5b4:	91 e0       	ldi	r25, 0x01	; 1
 5b6:	0e 94 a6 02 	call	0x54c	; 0x54c <LCD_String>
		if(nrf24_available()){
 5ba:	0e 94 db 01 	call	0x3b6	; 0x3b6 <nrf24_available>
 5be:	89 2b       	or	r24, r25
 5c0:	b1 f3       	breq	.-20     	; 0x5ae <main+0x28>
		strcpy(rf_message,nrf24_read_message());
 5c2:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <nrf24_read_message>
 5c6:	bc 01       	movw	r22, r24
 5c8:	ce 01       	movw	r24, r28
 5ca:	01 96       	adiw	r24, 0x01	; 1
 5cc:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <strcpy>
		LCD_String(rf_message);
 5d0:	ce 01       	movw	r24, r28
 5d2:	01 96       	adiw	r24, 0x01	; 1
 5d4:	0e 94 a6 02 	call	0x54c	; 0x54c <LCD_String>
		LCD_String("P");
 5d8:	85 e2       	ldi	r24, 0x25	; 37
 5da:	91 e0       	ldi	r25, 0x01	; 1
 5dc:	0e 94 a6 02 	call	0x54c	; 0x54c <LCD_String>
		//else if (rf_message[0]=="G"){
			//int speed =decode(rf_message);
			//gripper(speed);
		//}
				
    }
 5e0:	e6 cf       	rjmp	.-52     	; 0x5ae <main+0x28>

000005e2 <strcpy>:
 5e2:	fb 01       	movw	r30, r22
 5e4:	dc 01       	movw	r26, r24
 5e6:	01 90       	ld	r0, Z+
 5e8:	0d 92       	st	X+, r0
 5ea:	00 20       	and	r0, r0
 5ec:	e1 f7       	brne	.-8      	; 0x5e6 <strcpy+0x4>
 5ee:	08 95       	ret

000005f0 <_exit>:
 5f0:	f8 94       	cli

000005f2 <__stop_program>:
 5f2:	ff cf       	rjmp	.-2      	; 0x5f2 <__stop_program>
